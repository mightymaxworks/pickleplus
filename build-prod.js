/**
 * Pickle+ Production Build Script
 * 
 * This script creates a proper production build that:
 * 1. Creates a server entry point with production configuration
 * 2. Ensures static files are properly served
 * 3. Sets up correct PORT configuration for Cloud Run (8080)
 * 4. Preserves all existing functionality
 */

import fs from 'fs';
import path from 'path';

console.log('ðŸš€ Building Pickle+ for production deployment...');

// Create the production server file
const serverPath = path.join('server', 'index.js');
const serverContent = fs.readFileSync('server/index.ts', 'utf-8');

// Ensure port 8080 is used in production
const productionServerContent = `
// This file is auto-generated by build-prod.js
// It properly configures the server for production

// Set production environment
process.env.NODE_ENV = 'production';

// Import the server code
${serverContent}
`;

// Create a production.js entry point
const productionContent = `
// Pickle+ Production Entrypoint
// This file sets NODE_ENV to production and runs the server

process.env.NODE_ENV = 'production';

// Import the server index
import './server/index.js';
`;

// Write production.js file
fs.writeFileSync('production.js', productionContent);
console.log('âœ… Created production.js entry point');

// Ensure server/public directory exists for static files
const publicDir = path.join('server', 'public');
if (!fs.existsSync(publicDir)) {
  fs.mkdirSync(publicDir, { recursive: true });
  console.log(`âœ… Created ${publicDir} directory for static files`);
}

// Create a basic index.html for fallback/loading
const indexHtmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pickle+</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      background-color: #f7f8fa;
      color: #333;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .loading-container {
      text-align: center;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      background-color: white;
    }
    h1 {
      color: #38a169;
      margin-bottom: 1rem;
    }
    p {
      margin: 0.5rem 0;
    }
    .spinner {
      display: inline-block;
      width: 50px;
      height: 50px;
      border: 5px solid rgba(56, 161, 105, 0.3);
      border-radius: 50%;
      border-top-color: #38a169;
      animation: spin 1s ease-in-out infinite;
      margin: 1rem 0;
    }
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="loading-container">
    <h1>Pickle+</h1>
    <div class="spinner"></div>
    <p>Loading the application...</p>
    <p>Please wait while we set things up.</p>
  </div>
</body>
</html>
`;

// Write index.html file to public directory
fs.writeFileSync(path.join(publicDir, 'index.html'), indexHtmlContent);
console.log('âœ… Created index.html for static serving');

console.log('\nâœ… Production build complete!\n');
console.log('To deploy to Replit:');
console.log('1. Click the Deploy button in Replit');
console.log('2. Use these settings:');
console.log('   - Build Command: npm install');
console.log('   - Run Command: npx tsx production.js');
console.log('3. Click Deploy');