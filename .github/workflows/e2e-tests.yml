name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: pickle_plus_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      
      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libasound2t64 \
            libxcb1
      
      - name: Install Chrome browser
        run: npx puppeteer browsers install chrome

      - name: Setup database
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        run: |
          npm run db:push

      - name: Start server
        run: |
          npm run dev &
          sleep 10
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
          PORT: 5000

      - name: Wait for server
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000 > /dev/null; then
              echo "Server is ready!"
              exit 0
            fi
            echo "Waiting for server... ($i/30)"
            sleep 2
          done
          echo "Server failed to start"
          exit 1

      - name: Run authentication E2E tests
        run: npx jest tests/e2e/auth.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
      
      - name: Run match certification E2E tests
        run: npx jest tests/e2e/match-certification.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        if: success() || failure()
      
      - name: Run challenge system E2E tests
        run: npx jest tests/e2e/challenges.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        if: success() || failure()
      
      - name: Run rankings/leaderboards E2E tests
        run: npx jest tests/e2e/rankings.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        if: success() || failure()
      
      - name: Run notifications system E2E tests
        run: npx jest tests/e2e/notifications.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        if: success() || failure()
      
      - name: Run mobile features E2E tests
        run: npx jest tests/e2e/mobile.test.ts --config=tests/e2e/jest.config.cjs --forceExit
        env:
          TEST_URL: http://localhost:5000
          HEADLESS: true
          DATABASE_URL: postgresql://test:test@localhost:5432/pickle_plus_test
        if: success() || failure()

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-screenshots
          path: tests/e2e/screenshots/
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            tests/e2e/*.log
            tests/e2e/screenshots/
          retention-days: 7
      
      - name: Display test summary
        if: always()
        run: |
          echo "=== E2E Test Summary ==="
          echo "âœ… Authentication tests completed (4 tests)"
          echo "âœ… Match certification tests completed (3 tests)"
          echo "âœ… Challenge system tests completed (3 tests)"
          echo "âœ… Rankings/Leaderboards tests completed (10 tests)"
          echo "âœ… Notifications system tests completed (10 tests)"
          echo "âœ… Mobile features tests completed (13 tests)"
          echo "ðŸ“Š Total: 43 E2E test cases across 6 test suites"
          echo "ðŸ“¸ Screenshots and logs uploaded as artifacts"
